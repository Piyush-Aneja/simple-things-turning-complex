#include<iostream>
#include<limits>
#include<algorithm>
#include<vector>
#include<string>
using namespace std;
int main()
{
vector<int>vec;
vec={1,2,1,3,1,3};

int val=vec[0];
   vec.erase(remove(vec.begin(),vec.end(),val),vec.end());
         for(auto it=vec.begin();it!=vec.end();it++)
    {
        cout<<*it<<" ";
    }
//Output:2 3 3
cout<<endl;
//Now if we change val to vec[0] then output changes.

vec={1,2,1,3,1,3};
   vec.erase(remove(vec.begin(),vec.end(),vec[0]),vec.end());
         for(auto it=vec.begin();it!=vec.end();it++)
    {
        cout<<*it<<" ";
    }
//Output:2 1 3 1 3

return 0;
}

//this is because std::remove takes value by reference, it can have unexpected behavior if it is a reference to an element of the range [first, last) [documentation]
